
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000921

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000080fc memsz 0x00008100 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08008100 align 2**15
         filesz 0x000000d0 memsz 0x00000c10 flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000800c  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  080080fc  080080fc  000100fc  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         000000d0  20000800  08008100  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000b40  200008d0  080081d0  000108d0  2**3
                  ALLOC
  6 .debug_abbrev 00005ed8  00000000  00000000  000108d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0001c147  00000000  00000000  000167a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000b0d0  00000000  00000000  000328ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 0000245f  00000000  00000000  0003d9bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 000044b5  00000000  00000000  0003fe1e  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001698  00000000  00000000  000442d3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00001300  00000000  00000000  0004596b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00004e2f  00000000  00000000  00046c6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      0000002a  00000000  00000000  0004ba9a  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000031  00000000  00000000  0004bac4  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00003a60  00000000  00000000  0004baf8  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    00004d12  00000000  00000000  0004f558  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
080080fc l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
200008d0 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 mktm_r.c
08007bd0 l     O .text	00000060 mon_lengths
08007c30 l     O .text	00000008 year_lengths
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 gettzinfo.c
20000800 l     O .data	00000040 tzinfo
08000646 l       .text	00000000 .divsi3_skip_div0_test
00000000 l       *ABS*	00000000 shift
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000b44 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000998 l     O .bss	00000048 mainthread.4642
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000f50 l     F .text	00000022 fifo_remove
08000f80 l     F .text	00000020 dequeue
08001080 l     F .text	0000008e wakeup
00000000 l    df *ABS*	00000000 chthreads.c
080012c0 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chsem.c
080014e0 l     F .text	00000028 queue_insert
08001510 l     F .text	00000022 fifo_remove
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chqueues.c
08001880 l     F .text	00000028 queue_insert
080018b0 l     F .text	00000022 fifo_remove
080018e0 l     F .text	00000040 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000a0c l     O .bss	00000004 nextmem
20000a10 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 chheap.c
20000a18 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 mmc_spi.c
08007c60 l     O .text	00000020 mmc_vmt
08001f50 l     F .text	0000006c mmc_read
08001fc0 l     F .text	0000006c mmc_write
08007c80 l     O .text	00000100 crc7_lookup_table
08002030 l     F .text	00000054 crc7
08002090 l     F .text	00000068 wait
08002100 l     F .text	0000008a send_hdr
08002190 l     F .text	00000048 recvr1
080021e0 l     F .text	00000030 recvr3
08002210 l     F .text	0000004a send_command_R1
08002260 l     F .text	0000004e send_command_R3
080022b0 l     F .text	00000116 read_CxD
080023d0 l     F .text	00000048 sync
08007da0 l     O .text	00000007 stopcmd.6900
08007d90 l     O .text	00000002 start.6909
08007d80 l     O .text	00000002 stop.6914
00000000 l    df *ABS*	00000000 mmcsd.c
08002ad0 l     F .text	0000009e mmcsd_get_slice
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serial.c
08002db0 l     F .text	00000026 write
08002de0 l     F .text	00000026 read
08002e10 l     F .text	0000002a put
08002e40 l     F .text	0000001e get
08002e60 l     F .text	0000002a putt
08002e90 l     F .text	0000001e gett
08002eb0 l     F .text	00000026 writet
08002ee0 l     F .text	00000026 readt
08007db0 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 tm.c
20000a38 l     O .bss	00000004 measurement_offset
08003200 l     F .text	00000014 tm_start
08003220 l     F .text	00000054 tm_stop
00000000 l    df *ABS*	00000000 stm32_dma.c
20000a3c l     O .bss	00000004 dma_streams_mask
20000a40 l     O .bss	00000038 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
080036c0 l     F .text	00000060 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 ext_lld_isr.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
08007e30 l     O .text	00000012 cfgtab.6418
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
20000b18 l     O .bss	00000002 dummytx
20000b1a l     O .bss	00000002 dummyrx
08004020 l     F .text	000000d8 spi_lld_serve_rx_interrupt
08004100 l     F .text	0000001a spi_lld_serve_tx_interrupt
00000000 l    df *ABS*	00000000 pwm_lld.c
08004530 l     F .text	000000ac pwm_lld_serve_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
08004af0 l     F .text	00000076 set_error
08004b70 l     F .text	00000150 serve_interrupt
08004cc0 l     F .text	0000001c notify2
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 sd_spi_stm32.c
20000840 l     O .data	00000001 Stat
20000bbc l     O .bss	00000004 Timer1
20000bc0 l     O .bss	00000004 Timer2
20000bc4 l     O .bss	00000001 CardType
08004d50 l     F .text	00000040 interface_speed
08004d90 l     F .text	00000002 socket_wp_init
08004da0 l     F .text	00000002 socket_cp_init
08004db0 l     F .text	0000000c card_power
08004dc0 l     F .text	00000040 stm32_spi_rw
08004e00 l     F .text	00000010 rcvr_spi
08004e10 l     F .text	00000038 wait_ready
08004e50 l     F .text	00000018 release_spi
08004e70 l     F .text	00000144 power_on
08004fc0 l     F .text	00000084 power_off
08005050 l     F .text	000000bc rcvr_datablock
08005110 l     F .text	00000120 send_cmd
00000000 l    df *ABS*	00000000 ff.c
20000bc8 l     O .bss	00000004 FatFs
20000bcc l     O .bss	00000002 Fsid
08005570 l     F .text	00000046 mem_cpy
080055c0 l     F .text	0000003a mem_set
08005600 l     F .text	00000066 mem_cmp
08005670 l     F .text	0000002e chk_chr
080056a0 l     F .text	00000050 move_window
080058d0 l     F .text	00000128 dir_sdi
08005a00 l     F .text	00000100 dir_next
08005b00 l     F .text	000000b2 dir_find
08005bc0 l     F .text	000001f8 create_name
08007e90 l     O .text	00000080 excvt.4209
08005dc0 l     F .text	0000012e follow_path
08005ef0 l     F .text	000000f8 check_fs
08005ff0 l     F .text	000004c4 chk_mounted
080064c0 l     F .text	00000052 validate
00000000 l    df *ABS*	00000000 chrtclib.c
00000000 l    df *ABS*	00000000 stm32f10x_spi.c
00000000 l    df *ABS*	00000000 stm32f10x_gpio.c
00000000 l    df *ABS*	00000000 stm32f10x_rcc.c
00000000 l    df *ABS*	00000000 playback.c
20000844 l     O .data	00000034 pwmcfg
080070e0 l     F .text	000000e4 pwmpcb
20000fd4 l     O .bss	00000004 is_playing
20000fd8 l     O .bss	00000004 do_exit_pwm
20000878 l     O .data	0000000c hs_spicfg
20000884 l     O .data	0000000c ls_spicfg
20000890 l     O .data	0000000c mmccfg
20001234 l     O .bss	00000028 mailbox
2000125c l     O .bss	00000004 message
08006f10 l     F .text	0000004c playbackStart
08006f60 l     F .text	00000030 playbackStop
00000000 l    df *ABS*	00000000 lcd3310.c
00000000 l    df *ABS*	00000000 display.c
20001260 l     O .bss	00000001 displayMode
20001264 l     O .bss	00000028 mailbox
2000128c l     O .bss	00000004 message
080080f0 l     O .text	0000000c spicfg
20001290 l     O .bss	00000130 displayWA
08007510 l     F .text	0000004c display_thd
08007560 l     F .text	00000038 rtcCallback
08007730 l     F .text	00000040 displayTime
08007770 l     F .text	00000002 displayRootMenu
2000140c l     O .bss	00000004 msg.6505
080075a0 l     F .text	000000a0 time
20001400 l     O .bss	00000008 rtct.6523
20001408 l     O .bss	00000004 t.6524
08007640 l     F .text	0000006c numToStr
200013fc l     O .bss	00000004 s.6529
080076b0 l     F .text	00000074 timeStr
200013f0 l     O .bss	00000004 h.6533
200013f4 l     O .bss	00000004 m.6534
200013f8 l     O .bss	00000004 s.6535
200013c0 l     O .bss	00000030 lines
00000000 l    df *ABS*	00000000 servo.c
2000089c l     O .data	00000034 pwmcfg
08007890 l     F .text	000002a8 moveTo
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 shell.c
00000000 l    df *ABS*	00000000 chprintf.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 buttons.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 div.c
08007e50 g     O .text	0000003c pal_default_config
08003900 g     F .text	00000028 Vector58
08003bb0 g     F .text	00000028 VectorE8
080039f0 g     F .text	0000009c Vector9C
08000b90 g     F .text	00000094 nvicEnableVector
08004610 g     F .text	00000094 VectorAC
08001450 g     F .text	00000018 chThdExit
08000da0 g     F .text	000000a0 chSysTimerHandlerI
08001680 g     F .text	0000003e chEvtBroadcastFlagsI
08001110 g     F .text	0000005c chSchGoSleepTimeoutS
08005730 g     F .text	0000019e get_fat
08003930 g     F .text	00000028 Vector5C
08004370 g     F .text	0000001e spi_lld_select
080009f0  w    F .text	00000002 NMIVector
08006920 g     F .text	0000002c rtcGetTimeTm
08006ab0 g     F .text	00000016 SPI_I2S_SendData
08002b70 g     F .text	0000008c mmcsdGetCapacity
200008d0 g     O .bss	00000004 _daylight
08003520 g     F .text	00000064 dmaInit
080009f0  w    F .text	00000002 Vector8C
08002c30 g     F .text	00000052 pwmStart
080009f0  w    F .text	00000002 VectorDC
08006ad0 g     F .text	00000010 SPI_I2S_ReceiveData
08006950 g     F .text	0000007c SPI_I2S_DeInit
08004970 g     F .text	00000088 pwm_lld_stop
08000000 g     O startup	000000ec _vectors
08001030 g     F .text	0000004c chSchGoSleepS
080026a0 g     F .text	0000007c mmcDisconnect
08004700 g     F .text	0000026c pwm_lld_start
20000aac g     O .bss	00000008 EXTD1
08002c90 g     F .text	00000038 pwmStop
20001410 g       *ABS*	00000000 __heap_base__
08008100 g       *ABS*	00000000 _etext
08001380 g     F .text	00000060 chThdCreateI
00000000         *UND*	00000000 msObjectInit
080009f0  w    F .text	00000002 VectorC8
08004390 g     F .text	0000001e spi_lld_unselect
080044b0 g     F .text	0000007c spi_lld_receive
08001170 g     F .text	00000050 chSchWakeupS
08002f90 g     F .text	00000050 sdIncomingDataI
08001c50 g     F .text	0000008e chOQGetI
080071e0 g     F .text	0000000e mmc_lld_is_write_protected
08002d90 g     F .text	00000014 rtcGetTimeFat
08000fa0 g     F .text	0000002c _scheduler_init
080011c0 g     F .text	0000001c chSchRescheduleS
080013e0 g     F .text	00000040 chThdCreateStatic
080009f0  w    F .text	00000002 Vector94
080009f0  w    F .text	00000002 VectorA8
080009f0  w    F .text	00000002 VectorB4
080029f0 g     F .text	00000048 mmcStopSequentialWrite
08005230 g     F .text	00000218 disk_initialize
080071d0 g     F .text	0000000e mmc_lld_is_card_inserted
20000ab4 g     O .bss	00000004 RTCD1
20000b44 g     O .bss	00000078 SD2
08000fd0 g     F .text	0000005c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
08000a00  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000e40 g     F .text	00000024 _vt_init
08001e00 g     F .text	0000004c chCoreAllocI
080030d0 g     F .text	00000020 spiUnselect
08001e50 g     F .text	0000002c _heap_init
08003390 g     F .text	00000044 Vector74
08001e80 g     F .text	00000038 halInit
08006ae0 g     F .text	00000038 SPI_CalculateCRC
08006d70 g     F .text	0000003c RCC_APB2PeriphClockCmd
200008d0 g       .bss	00000000 _bss_start
080011e0 g     F .text	00000044 chSchDoRescheduleBehind
08003fb0 g     F .text	0000006e rtc_lld_get_time_fat
080009f0  w    F .text	00000002 UsageFaultVector
08006b70 g     F .text	000001b6 GPIO_Init
08005450 g     F .text	00000028 disk_status
20002000 g       *ABS*	00000000 __heap_end__
080009f0  w    F .text	00000002 DebugMonitorVector
20001200 g     O .bss	00000034 MMCD1
08007f10 g     O .text	000001d6 Fonts8x5
080009f0  w    F .text	00000002 Vector40
08002d30 g     F .text	0000002e rtcGetTime
08000920 g     F .text	000000d0 ResetHandler
08001ab0 g     F .text	000000be chIQReadTimeout
080009f0  w    F .text	00000002 VectorBC
080072a0 g     F .text	00000050 lcd3310WriteByte
08000a60 g     F .text	00000040 _port_init
08003720 g     F .text	0000008c hal_lld_init
08001720 g     F .text	00000060 chMBInit
08006db0 g     F .text	0000003c RCC_APB1PeriphClockCmd
08004120 g     F .text	00000080 spi_lld_init
08001470 g     F .text	00000068 chThdExitS
08002d20 g     F .text	00000008 rtcInit
08001f30 g     F .text	00000018 extObjectInit
08006b20 g     F .text	00000042 SPI_I2S_GetFlagStatus
08001ec0 g     F .text	00000008 adcInit
080009f0  w    F .text	00000002 PendSVVector
20000fd0 g     O .bss	00000004 sndIndex
08000e70 g     F .text	0000008c chVTSetI
08003990 g     F .text	00000028 Vector64
20001410 g       .bss	00000000 _bss_end
08000910  w    F .text	00000002 _default_exit
08003ca0 g     F .text	000000e0 _pal_lld_setgroupmode
08003870 g     F .text	0000008c adc_lld_init
08000624 g     F .text	00000002 __tz_unlock
080009f0  w    F .text	00000002 VectorCC
08004d00 g     F .text	00000024 sd_lld_init
08001540 g     F .text	0000002a chSemInit
080009f0  w    F .text	00000002 Vector54
08007350 g     F .text	0000005a lcd3310SetPosXY
080009f0  w    F .text	00000002 Vector98
20000a78 g     O .bss	00000034 ADCD1
08004ce0 g     F .text	00000014 VectorD8
08006d30 g     F .text	00000016 GPIO_SetBits
080009f0  w    F .text	00000002 Vector24
080041a0 g     F .text	00000158 spi_lld_start
080012a0 g     F .text	0000001c chSchDoReschedule
08000d20 g     F .text	00000074 chSysInit
08001420 g     F .text	00000024 chThdSleep
08001920 g     F .text	00000052 chIQInit
08000640 g     F .text	00000000 __aeabi_idiv
08007dd0 g     O .text	00000054 _stm32_dma_streams
080034d0 g     F .text	00000044 Vector84
20000fdc g     O .bss	00000224 MMC_FS
00000000         *UND*	00000000 assert_param
08001f20 g     F .text	00000008 extInit
08000a10 g     F .text	0000001c SysTickVector
08002ff0 g     F .text	0000002e spiObjectInit
20000ab8 g     O .bss	00000030 SPID1
080037b0 g     F .text	000000b4 stm32_clock_init
08003bf0 g     F .text	000000a4 _pal_lld_init
08002f10 g     F .text	00000008 sdInit
080009f0  w    F .text	00000002 BusFaultVector
080009f0  w    F .text	00000002 VectorD0
08002a90 g     F .text	00000038 mmcGetInfo
08001da0 g     F .text	00000030 _core_init
080046d0 g     F .text	0000002c pwm_lld_init
08002d60 g     F .text	00000024 rtcSetCallback
08006f90 g     F .text	00000148 play
08003be0 g     F .text	00000010 ext_lld_init
08003b80 g     F .text	00000028 VectorE4
08002cd0 g     F .text	00000044 pwmEnableChannel
080066c0 g     F .text	00000258 f_read
080009f0  w    F .text	00000002 VectorC0
08002860 g     F .text	00000050 mmcStopSequentialRead
08000b50 g     F .text	00000014 _port_switch
00002000 g       *ABS*	00000000 __ram_size__
08001810 g     F .text	00000068 chMBFetchS
08000a30 g     F .text	00000026 SVCallVector
08000900  w    F .text	00000002 __late_init
08002430 g     F .text	0000002c mmcObjectInit
08004300 g     F .text	00000070 spi_lld_stop
200009e0 g     O .bss	00000010 vtlist
080009f0  w    F .text	00000002 HardFaultVector
08000aa0 g     F .text	000000a0 _port_irq_epilogue
08006d50 g     F .text	00000016 GPIO_ResetBits
08001dd0 g     F .text	00000026 chCoreAlloc
08004aa0 g     F .text	00000046 pwm_lld_disable_channel
080077d0 g     F .text	00000060 heilUp
20000ae8 g     O .bss	00000030 SPID2
08002c00 g     F .text	00000008 pwmInit
08007780 g     F .text	00000048 initServo
080008f0  w    F .text	00000002 __aeabi_ldiv0
080073b0 g     F .text	0000005c lcd3310WriteChar
08008100 g       *ABS*	00000000 _textdata
08003a90 g     F .text	000000b4 VectorE0
00000000 g       *ABS*	00000000 _text
08007410 g     F .text	0000002a lcd3310WriteText
080009f0  w    F .text	00000002 MemManageVector
08001780 g     F .text	0000005c chMBPostI
080000ec g       startup	00000000 __fini_array_start
08002a40 g     F .text	00000048 mmcSync
08000620 g     F .text	00000002 __tz_lock
08006e70 g     F .text	00000094 playbackInit
08007b40 g     F .text	0000004c main
08003300 g     F .text	0000003c Vector6C
200009f0 g     O .bss	0000001c rlist
20000b30 g     O .bss	00000014 PWMD4
080009f0  w    F .text	00000002 VectorA0
08002fe0 g     F .text	00000008 spiInit
08001ed0 g     F .text	00000046 adcObjectInit
080017e0 g     F .text	0000002e chMBFetch
08007440 g     F .text	000000c4 initDisplay
080000ec g       startup	00000000 __init_array_end
08004a00 g     F .text	00000094 pwm_lld_enable_channel
20000b1c g     O .bss	00000014 PWMD1
080009f0  w    F .text	00000002 VectorC4
08003430 g     F .text	00000044 Vector7C
08003e10 g     F .text	00000044 rtc_lld_set_prescaler
08006520 g     F .text	0000005c f_mount
08003670 g     F .text	00000050 dmaStreamRelease
08001660 g     F .text	00000020 chMtxInit
08000d00 g     F .text	00000018 _idle_thread
08001ce0 g     F .text	000000be chOQWriteTimeout
08000640 g     F .text	00000294 __divsi3
08002c10 g     F .text	00000018 pwmObjectInit
080009f0  w    F .text	00000002 VectorB0
08007c40 g     O .text	00000016 ch_debug
080009f0  w    F .text	00000002 Vector90
080016c0 g     F .text	00000058 chEvtSignalI
08006a70 g     F .text	00000038 SPI_Cmd
20000000 g       *ABS*	00000000 __ram_start__
08003ec0 g     F .text	0000008c rtc_lld_get_time
08000b70 g     F .text	00000012 _port_thread_start
08003960 g     F .text	00000028 Vector60
080009f0  w    F .text	00000002 Vector1C
08002420 g     F .text	00000002 mmcInit
08001230 g     F .text	00000070 chSchDoRescheduleAhead
08002720 g     F .text	0000008a mmcStartSequentialRead
080028b0 g     F .text	0000008a mmcStartSequentialWrite
080009f0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08003340 g     F .text	00000044 Vector70
080009f0  w    F .text	00000002 VectorD4
08000ca0 g     F .text	0000005c nvicSetSystemHandlerPriority
08003070 g     F .text	0000003e spiStop
08004430 g     F .text	0000007c spi_lld_send
080030f0 g     F .text	0000004c spiIgnore
200008d8 g     O .bss	000000c0 _idle_thread_wa
08001b70 g     F .text	00000050 chOQInit
08006e30 g     F .text	0000003c RCC_APB1PeriphResetCmd
08001a20 g     F .text	0000008c chIQGetTimeout
20000800 g       .data	00000000 _data
08003f50 g     F .text	00000060 rtc_lld_set_callback
08003d80 g     F .text	00000090 Vector4C
08003480 g     F .text	00000044 Vector80
08001980 g     F .text	00000094 chIQPutI
08000b40 g     F .text	00000006 _port_switch_from_isr
08003280 g     F .text	00000034 tmInit
200008d4 g     O .bss	00000004 _timezone
080000f0 g     F .text	00000006 localtime_r
080039c0 g     F .text	00000028 Vector68
080056f0 g     F .text	00000038 clust2sect
080030b0 g     F .text	00000020 spiSelect
08003140 g     F .text	00000054 spiSend
20000400 g       .stacks	00000000 __main_stack_end__
080033e0 g     F .text	00000044 Vector78
080043b0 g     F .text	0000007c spi_lld_ignore
080024a0 g     F .text	00000200 mmcConnect
20002000 g       *ABS*	00000000 __ram_end__
200008d0 g       .data	00000000 _edata
20001410 g       *ABS*	00000000 _end
080072f0 g     F .text	00000054 lcd3310Clear
08000f00 g     F .text	00000044 chVTResetI
080009f0 g     F .text	00000002 _unhandled_exception
08002f20 g     F .text	00000068 sdObjectInit
080009f0  w    F .text	00000002 Vector88
080071f0 g     F .text	000000a4 lcd3310Init
08006580 g     F .text	0000013e f_open
080032c0 g     F .text	00000034 tmObjectInit
20000400 g       .stacks	00000000 __main_thread_stack_base__
080008f0  w    F .text	00000002 __aeabi_idiv0
080000ec g       startup	00000000 __init_array_start
08002460 g     F .text	00000032 mmcStart
08003020 g     F .text	0000004a spiStart
080012e0 g     F .text	0000009c _thread_init
080009f0  w    F .text	00000002 Vector50
20000bd0 g     O .bss	00000400 sndBuf
08005480 g     F .text	000000f0 disk_read
08003590 g     F .text	000000d8 dmaStreamAllocate
08007830 g     F .text	00000060 heilDown
08006df0 g     F .text	0000003c RCC_APB2PeriphResetCmd
08003e60 g     F .text	00000054 rtc_lld_init
08000c30 g     F .text	0000006c nvicDisableVector
080069d0 g     F .text	0000009c SPI_Init
08001bc0 g     F .text	00000090 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
08003b50 g     F .text	00000028 Vector44
080009f0  w    F .text	00000002 Vector28
08004d40 g     F .text	00000002 boardInit
08002940 g     F .text	000000b0 mmcSequentialWrite
080046b0 g     F .text	00000014 VectorB8
00000400 g       *ABS*	00000000 __main_stack_size__
20000800 g       .stacks	00000000 __process_stack_end__
08000100 g     F .text	00000182 __tzcalc_limits
080009f0  w    F .text	00000002 Vector34
080031a0 g     F .text	00000054 spiReceive
080008d4 g     F .text	0000001a __aeabi_idivmod
08004d30 g     F .text	00000008 __early_init
08001600 g     F .text	0000005c chSemSignalI
080045e0 g     F .text	00000024 VectorA4
080027b0 g     F .text	000000a6 mmcSequentialRead
00000400 g       *ABS*	00000000 __process_stack_size__
080009f0  w    F .text	00000002 Vector20
08000630 g     F .text	0000000a __gettzinfo
08000284 g     F .text	00000390 _mktm_r
08001570 g     F .text	0000008c chSemWaitTimeoutS


