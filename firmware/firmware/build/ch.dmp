
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x00003a2c memsz 0x00003a30 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08003a30 align 2**15
         filesz 0x00000024 memsz 0x00000024 flags rw-
    LOAD off    0x00010828 vaddr 0x20000828 paddr 0x08003a54 align 2**15
         filesz 0x00000000 memsz 0x000002dc flags rw-
    LOAD off    0x00018000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000393c  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  08003a2c  08003a2c  0000ba2c  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00018000  2**0
                  ALLOC
  4 .data         00000024  20000800  08003a30  00010800  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          000002dc  20000828  08003a54  00010828  2**3
                  ALLOC
  6 .debug_abbrev 00004e40  00000000  00000000  00010824  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0001852f  00000000  00000000  00015664  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000093f4  00000000  00000000  0002db93  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubnames 00001a15  00000000  00000000  00036f87  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 00003c8a  00000000  00000000  0003899c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00001100  00000000  00000000  0003c626  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000e00  00000000  00000000  0003d726  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003ce5  00000000  00000000  0003e526  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .comment      0000002a  00000000  00000000  0004220b  2**0
                  CONTENTS, READONLY
 15 .ARM.attributes 00000031  00000000  00000000  00042235  2**0
                  CONTENTS, READONLY
 16 .debug_frame  00002a04  00000000  00000000  00042268  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_loc    000038ec  00000000  00000000  00044c6c  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
08003a2c l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000828 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000334 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
200008e8 l     O .bss	00000048 mainthread.4642
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000740 l     F .text	00000022 fifo_remove
08000770 l     F .text	00000020 dequeue
08000870 l     F .text	0000008e wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000a90 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000d70 l     F .text	00000028 queue_insert
08000da0 l     F .text	00000022 fifo_remove
08000dd0 l     F .text	00000040 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
2000095c l     O .bss	00000004 nextmem
20000960 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 chheap.c
20000968 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 mmc_spi.c
08003820 l     O .text	00000020 mmc_vmt
08001410 l     F .text	0000006c mmc_read
08001480 l     F .text	0000006c mmc_write
08003840 l     O .text	00000100 crc7_lookup_table
080014f0 l     F .text	00000054 crc7
08001550 l     F .text	00000068 wait
080015c0 l     F .text	0000008a send_hdr
08001650 l     F .text	00000048 recvr1
080016a0 l     F .text	00000030 recvr3
080016d0 l     F .text	0000004a send_command_R1
08001720 l     F .text	0000004e send_command_R3
08001770 l     F .text	00000116 read_CxD
08001890 l     F .text	00000048 sync
08003960 l     O .text	00000007 stopcmd.6848
08003950 l     O .text	00000002 start.6857
08003940 l     O .text	00000002 stop.6862
00000000 l    df *ABS*	00000000 mmcsd.c
08001f90 l     F .text	0000009e mmcsd_get_slice
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serial.c
08002100 l     F .text	00000026 write
08002130 l     F .text	00000026 read
08002160 l     F .text	0000002a put
08002190 l     F .text	0000001e get
080021b0 l     F .text	0000002a putt
080021e0 l     F .text	0000001e gett
08002200 l     F .text	00000026 writet
08002230 l     F .text	00000026 readt
08003970 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 tm.c
20000988 l     O .bss	00000004 measurement_offset
08002550 l     F .text	00000014 tm_start
08002570 l     F .text	00000054 tm_stop
00000000 l    df *ABS*	00000000 stm32_dma.c
2000098c l     O .bss	00000004 dma_streams_mask
20000990 l     O .bss	00000038 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
08002a10 l     F .text	00000060 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
20000a60 l     O .bss	00000002 dummytx
20000a62 l     O .bss	00000002 dummyrx
08002e40 l     F .text	000000d8 spi_lld_serve_rx_interrupt
08002f20 l     F .text	0000001a spi_lld_serve_tx_interrupt
00000000 l    df *ABS*	00000000 pwm_lld.c
08003350 l     F .text	000000ac pwm_lld_serve_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
08003520 l     F .text	00000076 set_error
080035a0 l     F .text	00000150 serve_interrupt
080036f0 l     F .text	0000001c notify2
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 main.c
20000800 l     O .data	0000000c mmccfg.6669
2000080c l     O .data	0000000c ls_spicfg.6668
20000818 l     O .data	0000000c hs_spicfg.6667
00000000 l    df *ABS*	00000000 3310-backend.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 ext_lld_isr.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 fatfs_diskio.c
00000000 l    df *ABS*	00000000 fatfs_syscall.c
00000000 l    df *ABS*	00000000 ff.c
00000000 l    df *ABS*	00000000 ccsbcs.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 dac.c
00000000 l    df *ABS*	00000000 playback.c
00000000 l    df *ABS*	00000000 3310.c
00000000 l    df *ABS*	00000000 memset.c
080039f0 g     O .text	0000003c pal_default_config
080001e0  w    F .text	00000002 Vector58
080001e0  w    F .text	00000002 VectorE8
080001e0  w    F .text	00000002 Vector9C
08000380 g     F .text	00000094 nvicEnableVector
08003430 g     F .text	00000094 VectorAC
08000c20 g     F .text	00000018 chThdExit
08000590 g     F .text	000000a0 chSysTimerHandlerI
08000cd0 g     F .text	0000003e chEvtBroadcastFlagsI
08000900 g     F .text	0000005c chSchGoSleepTimeoutS
080001e0  w    F .text	00000002 Vector5C
08003190 g     F .text	0000001e spi_lld_select
080001e0  w    F .text	00000002 NMIVector
00000000         *UND*	00000000 rtcGetTimeTm
08002030 g     F .text	0000008c mmcsdGetCapacity
08002870 g     F .text	00000064 dmaInit
080001e0  w    F .text	00000002 Vector8C
080001e0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08000820 g     F .text	0000004c chSchGoSleepS
08001b60 g     F .text	0000007c mmcDisconnect
20000b04 g       *ABS*	00000000 __heap_base__
08003a30 g       *ABS*	00000000 _etext
08000b50 g     F .text	00000060 chThdCreateI
080001e0  w    F .text	00000002 VectorC8
080031b0 g     F .text	0000001e spi_lld_unselect
080032d0 g     F .text	0000007c spi_lld_receive
08000960 g     F .text	00000050 chSchWakeupS
080022e0 g     F .text	00000050 sdIncomingDataI
08001140 g     F .text	0000008e chOQGetI
080037e0 g     F .text	0000000e mmc_lld_is_write_protected
08000790 g     F .text	0000002c _scheduler_init
08000bb0 g     F .text	00000040 chThdCreateStatic
080001e0  w    F .text	00000002 Vector94
080001e0  w    F .text	00000002 VectorA8
080001e0  w    F .text	00000002 VectorB4
08001eb0 g     F .text	00000048 mmcStopSequentialWrite
080037d0 g     F .text	0000000e mmc_lld_is_card_inserted
200009fc g     O .bss	00000004 RTCD1
20000a8c g     O .bss	00000078 SD2
080007c0 g     F .text	0000005c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
080001f0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000630 g     F .text	00000024 _vt_init
080012f0 g     F .text	0000004c chCoreAllocI
08002420 g     F .text	00000020 spiUnselect
08001340 g     F .text	0000002c _heap_init
080026e0 g     F .text	00000044 Vector74
08001370 g     F .text	00000034 halInit
20000828 g       .bss	00000000 _bss_start
080009b0 g     F .text	00000044 chSchDoRescheduleBehind
080001e0  w    F .text	00000002 UsageFaultVector
20002000 g       *ABS*	00000000 __heap_end__
080001e0  w    F .text	00000002 DebugMonitorVector
080001e0  w    F .text	00000002 Vector40
08000110 g     F .text	000000d0 ResetHandler
08000fa0 g     F .text	000000be chIQReadTimeout
080001e0  w    F .text	00000002 VectorBC
08000250 g     F .text	00000040 _port_init
08002a70 g     F .text	0000008c hal_lld_init
08002f40 g     F .text	00000080 spi_lld_init
08000c40 g     F .text	00000068 chThdExitS
080020f0 g     F .text	00000008 rtcInit
080013b0 g     F .text	00000008 adcInit
080001e0  w    F .text	00000002 PendSVVector
08000660 g     F .text	0000008c chVTSetI
080001e0  w    F .text	00000002 Vector64
20000b04 g       .bss	00000000 _bss_end
08000100  w    F .text	00000002 _default_exit
08002bc0 g     F .text	0000008c adc_lld_init
080001e0  w    F .text	00000002 VectorCC
08003730 g     F .text	00000024 sd_lld_init
080001e0  w    F .text	00000002 Vector54
080001e0  w    F .text	00000002 Vector98
200009c8 g     O .bss	00000034 ADCD1
08003710 g     F .text	00000014 VectorD8
080001e0  w    F .text	00000002 Vector24
08002fc0 g     F .text	00000158 spi_lld_start
08000a70 g     F .text	0000001c chSchDoReschedule
08000510 g     F .text	00000074 chSysInit
08000bf0 g     F .text	00000024 chThdSleep
08000e10 g     F .text	00000052 chIQInit
08003990 g     O .text	00000054 _stm32_dma_streams
08002820 g     F .text	00000044 Vector84
08000200 g     F .text	0000001c SysTickVector
08002340 g     F .text	0000002e spiObjectInit
20000a00 g     O .bss	00000030 SPID1
08002b00 g     F .text	000000b4 stm32_clock_init
08002c50 g     F .text	000000a4 _pal_lld_init
08002260 g     F .text	00000008 sdInit
080001e0  w    F .text	00000002 BusFaultVector
080001e0  w    F .text	00000002 VectorD0
08001f50 g     F .text	00000038 mmcGetInfo
08001290 g     F .text	00000030 _core_init
080034f0 g     F .text	0000002c pwm_lld_init
080001e0  w    F .text	00000002 VectorE4
080001e0  w    F .text	00000002 VectorC0
08001d20 g     F .text	00000050 mmcStopSequentialRead
08000340 g     F .text	00000014 _port_switch
00002000 g       *ABS*	00000000 __ram_size__
08000220 g     F .text	00000026 SVCallVector
080000f0  w    F .text	00000002 __late_init
080018f0 g     F .text	0000002c mmcObjectInit
08003120 g     F .text	00000070 spi_lld_stop
20000930 g     O .bss	00000010 vtlist
080001e0  w    F .text	00000002 HardFaultVector
08000290 g     F .text	000000a0 _port_irq_epilogue
080012c0 g     F .text	00000026 chCoreAlloc
20000a30 g     O .bss	00000030 SPID2
080020c0 g     F .text	00000008 pwmInit
08003a30 g       *ABS*	00000000 _textdata
080001e0  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
080001e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08001f00 g     F .text	00000048 mmcSync
08003780 g     F .text	00000048 main
08002650 g     F .text	0000003c Vector6C
20000940 g     O .bss	0000001c rlist
20000a78 g     O .bss	00000014 PWMD4
080001e0  w    F .text	00000002 VectorA0
08002330 g     F .text	00000008 spiInit
080013c0 g     F .text	00000046 adcObjectInit
080000ec g       startup	00000000 __init_array_end
20000a64 g     O .bss	00000014 PWMD1
080001e0  w    F .text	00000002 VectorC4
08002780 g     F .text	00000044 Vector7C
08002d90 g     F .text	00000044 rtc_lld_set_prescaler
080029c0 g     F .text	00000050 dmaStreamRelease
08000cb0 g     F .text	00000020 chMtxInit
080004f0 g     F .text	00000018 _idle_thread
080011d0 g     F .text	000000be chOQWriteTimeout
080020d0 g     F .text	00000018 pwmObjectInit
080001e0  w    F .text	00000002 VectorB0
08003800 g     O .text	00000016 ch_debug
080001e0  w    F .text	00000002 Vector90
08000d10 g     F .text	00000058 chEvtSignalI
20000000 g       *ABS*	00000000 __ram_start__
08000360 g     F .text	00000012 _port_thread_start
080001e0  w    F .text	00000002 Vector60
080001e0  w    F .text	00000002 Vector1C
080018e0 g     F .text	00000002 mmcInit
08000a00 g     F .text	00000070 chSchDoRescheduleAhead
08001be0 g     F .text	0000008a mmcStartSequentialRead
08001d70 g     F .text	0000008a mmcStartSequentialWrite
080001e0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08002690 g     F .text	00000044 Vector70
080001e0  w    F .text	00000002 VectorD4
08000490 g     F .text	0000005c nvicSetSystemHandlerPriority
080023c0 g     F .text	0000003e spiStop
08003250 g     F .text	0000007c spi_lld_send
08002440 g     F .text	0000004c spiIgnore
20000828 g     O .bss	000000c0 _idle_thread_wa
08001060 g     F .text	00000050 chOQInit
08000f10 g     F .text	0000008c chIQGetTimeout
20000800 g       .data	00000000 _data
08002d00 g     F .text	00000090 Vector4C
080027d0 g     F .text	00000044 Vector80
08000e70 g     F .text	00000094 chIQPutI
08000330 g     F .text	00000006 _port_switch_from_isr
080025d0 g     F .text	00000034 tmInit
080001e0  w    F .text	00000002 Vector68
08002400 g     F .text	00000020 spiSelect
08002490 g     F .text	00000054 spiSend
20000400 g       .stacks	00000000 __main_stack_end__
08002730 g     F .text	00000044 Vector78
080031d0 g     F .text	0000007c spi_lld_ignore
08001960 g     F .text	00000200 mmcConnect
20002000 g       *ABS*	00000000 __ram_end__
20000824 g       .data	00000000 _edata
20000b04 g       *ABS*	00000000 _end
080006f0 g     F .text	00000044 chVTResetI
080001e0 g     F .text	00000002 _unhandled_exception
08002270 g     F .text	00000068 sdObjectInit
080001e0  w    F .text	00000002 Vector88
08002610 g     F .text	00000034 tmObjectInit
20000400 g       .stacks	00000000 __main_thread_stack_base__
080000ec g       startup	00000000 __init_array_start
08001920 g     F .text	00000032 mmcStart
08002370 g     F .text	0000004a spiStart
08000ab0 g     F .text	0000009c _thread_init
080001e0  w    F .text	00000002 Vector50
080028e0 g     F .text	000000d8 dmaStreamAllocate
08002de0 g     F .text	00000054 rtc_lld_init
08000420 g     F .text	0000006c nvicDisableVector
080010b0 g     F .text	00000090 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080001e0  w    F .text	00000002 Vector44
080001e0  w    F .text	00000002 Vector28
08003770 g     F .text	00000002 boardInit
08001e00 g     F .text	000000b0 mmcSequentialWrite
080034d0 g     F .text	00000014 VectorB8
00000400 g       *ABS*	00000000 __main_stack_size__
20000800 g       .stacks	00000000 __process_stack_end__
080001e0  w    F .text	00000002 Vector34
080024f0 g     F .text	00000054 spiReceive
08003760 g     F .text	00000008 __early_init
08003400 g     F .text	00000024 VectorA4
08001c70 g     F .text	000000a6 mmcSequentialRead
00000400 g       *ABS*	00000000 __process_stack_size__
080001e0  w    F .text	00000002 Vector20


