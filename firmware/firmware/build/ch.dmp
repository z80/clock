
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x000029b8 memsz 0x000029b8 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x080029b8 align 2**15
         filesz 0x00000000 memsz 0x000002dc flags rw-
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000028c8  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stacks       00000800  20000000  20000000  00010000  2**0
                  ALLOC
  3 .bss          000002dc  20000800  080029b8  00010800  2**3
                  ALLOC
  4 .debug_abbrev 0000573e  00000000  00000000  0000a9b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0001a716  00000000  00000000  000100f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   0000a5a8  00000000  00000000  0002a80c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_pubnames 000021d4  00000000  00000000  00034db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubtypes 00003fbe  00000000  00000000  00036f88  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00001498  00000000  00000000  0003af46  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00001148  00000000  00000000  0003c3de  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00004a7b  00000000  00000000  0003d526  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .comment      0000002a  00000000  00000000  00041fa1  2**0
                  CONTENTS, READONLY
 13 .ARM.attributes 00000031  00000000  00000000  00041fcb  2**0
                  CONTENTS, READONLY
 14 .debug_frame  00003564  00000000  00000000  00041ffc  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0000470e  00000000  00000000  00045560  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000324 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
200008c0 l     O .bss	00000048 mainthread.4642
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
080006c0 l     F .text	00000022 fifo_remove
080006f0 l     F .text	00000020 dequeue
080007f0 l     F .text	0000008e wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000a10 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chqueues.c
08000cf0 l     F .text	00000028 queue_insert
08000d20 l     F .text	00000022 fifo_remove
08000d50 l     F .text	00000040 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000934 l     O .bss	00000004 nextmem
20000938 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 chheap.c
20000940 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 mmc_spi.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serial.c
080013e0 l     F .text	00000026 write
08001410 l     F .text	00000026 read
08001440 l     F .text	0000002a put
08001470 l     F .text	0000001e get
08001490 l     F .text	0000002a putt
080014c0 l     F .text	0000001e gett
080014e0 l     F .text	00000026 writet
08001510 l     F .text	00000026 readt
08002720 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 tm.c
20000960 l     O .bss	00000004 measurement_offset
080016f0 l     F .text	00000014 tm_start
08001710 l     F .text	00000054 tm_stop
00000000 l    df *ABS*	00000000 stm32_dma.c
20000964 l     O .bss	00000004 dma_streams_mask
20000968 l     O .bss	00000038 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
08001a80 l     F .text	00000060 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
20000a38 l     O .bss	00000002 dummytx
20000a3a l     O .bss	00000002 dummyrx
00000000 l    df *ABS*	00000000 pwm_lld.c
08001ff0 l     F .text	000000ac pwm_lld_serve_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
080021c0 l     F .text	00000076 set_error
08002240 l     F .text	00000150 serve_interrupt
08002390 l     F .text	0000001c notify2
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 lcd3310.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 mmcsd.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 ext_lld_isr.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 sd_spi_stm32.c
00000000 l    df *ABS*	00000000 ff.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 shell.c
00000000 l    df *ABS*	00000000 chprintf.c
00000000 l    df *ABS*	00000000 chrtclib.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 stm32f10x_spi.c
00000000 l    df *ABS*	00000000 stm32f10x_gpio.c
00000000 l    df *ABS*	00000000 stm32f10x_rcc.c
00000000 l    df *ABS*	00000000 playback.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
00000000 l    df *ABS*	00000000 mktm_r.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 gettzinfo.c
00000000 l       *ABS*	00000000 shift
080027a0 g     O .text	0000003c pal_default_config
080001e0  w    F .text	00000002 Vector58
080001e0  w    F .text	00000002 VectorE8
080001e0  w    F .text	00000002 Vector9C
08000370 g     F .text	00000094 nvicEnableVector
080020d0 g     F .text	00000094 VectorAC
08000ba0 g     F .text	00000018 chThdExit
08000510 g     F .text	000000a0 chSysTimerHandlerI
08000c50 g     F .text	0000003e chEvtBroadcastFlagsI
08000880 g     F .text	0000005c chSchGoSleepTimeoutS
080001e0  w    F .text	00000002 Vector5C
08001f30 g     F .text	0000001e spi_lld_select
080001e0  w    F .text	00000002 NMIVector
08001a10 g     F .text	00000064 dmaInit
080001e0  w    F .text	00000002 Vector8C
080001e0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
080007a0 g     F .text	0000004c chSchGoSleepS
20000adc g       *ABS*	00000000 __heap_base__
080029b8 g       *ABS*	00000000 _etext
08000ad0 g     F .text	00000060 chThdCreateI
00000000         *UND*	00000000 msObjectInit
080001e0  w    F .text	00000002 VectorC8
08001f50 g     F .text	0000001e spi_lld_unselect
080008e0 g     F .text	00000050 chSchWakeupS
080015c0 g     F .text	00000050 sdIncomingDataI
080010c0 g     F .text	0000008e chOQGetI
08000710 g     F .text	0000002c _scheduler_init
08000b30 g     F .text	00000040 chThdCreateStatic
080001e0  w    F .text	00000002 Vector94
080001e0  w    F .text	00000002 VectorA8
080001e0  w    F .text	00000002 VectorB4
200009d4 g     O .bss	00000004 RTCD1
20000a64 g     O .bss	00000078 SD2
08000740 g     F .text	0000005c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
20000800 g       .stacks	00000000 __main_thread_stack_end__
080005b0 g     F .text	00000024 _vt_init
08001270 g     F .text	0000004c chCoreAllocI
08001670 g     F .text	00000020 spiUnselect
080012c0 g     F .text	0000002c _heap_init
08001880 g     F .text	00000044 Vector74
080012f0 g     F .text	00000034 halInit
20000800 g       .bss	00000000 _bss_start
08000930 g     F .text	00000044 chSchDoRescheduleBehind
080001e0  w    F .text	00000002 UsageFaultVector
20002000 g       *ABS*	00000000 __heap_end__
080001e0  w    F .text	00000002 DebugMonitorVector
080027e0 g     O .text	000001d6 Fonts8x5
080001e0  w    F .text	00000002 Vector40
08000110 g     F .text	000000d0 ResetHandler
08000f20 g     F .text	000000be chIQReadTimeout
080001e0  w    F .text	00000002 VectorBC
080024d0 g     F .text	00000050 lcd3310WriteByte
08000240 g     F .text	00000040 _port_init
08001ae0 g     F .text	0000008c hal_lld_init
08001eb0 g     F .text	00000080 spi_lld_init
08000bc0 g     F .text	00000068 chThdExitS
080013d0 g     F .text	00000008 rtcInit
08001330 g     F .text	00000008 adcInit
080001e0  w    F .text	00000002 PendSVVector
080005e0 g     F .text	0000008c chVTSetI
080001e0  w    F .text	00000002 Vector64
20000adc g       .bss	00000000 _bss_end
08000100  w    F .text	00000002 _default_exit
08001c30 g     F .text	0000008c adc_lld_init
080001e0  w    F .text	00000002 VectorCC
080023d0 g     F .text	00000024 sd_lld_init
080001e0  w    F .text	00000002 Vector54
08002580 g     F .text	0000005a lcd3310SetPosXY
080001e0  w    F .text	00000002 Vector98
200009a0 g     O .bss	00000034 ADCD1
080023b0 g     F .text	00000014 VectorD8
080001e0  w    F .text	00000002 Vector24
080009f0 g     F .text	0000001c chSchDoReschedule
08000490 g     F .text	00000074 chSysInit
08000b70 g     F .text	00000024 chThdSleep
08000d90 g     F .text	00000052 chIQInit
08002740 g     O .text	00000054 _stm32_dma_streams
080019c0 g     F .text	00000044 Vector84
00000000         *UND*	00000000 assert_param
080001f0 g     F .text	0000001c SysTickVector
08001620 g     F .text	0000002e spiObjectInit
200009d8 g     O .bss	00000030 SPID1
08001b70 g     F .text	000000b4 stm32_clock_init
08001cc0 g     F .text	000000a4 _pal_lld_init
08001540 g     F .text	00000008 sdInit
080001e0  w    F .text	00000002 BusFaultVector
080001e0  w    F .text	00000002 VectorD0
08001210 g     F .text	00000030 _core_init
08002190 g     F .text	0000002c pwm_lld_init
080001e0  w    F .text	00000002 VectorE4
080001e0  w    F .text	00000002 VectorC0
08000330 g     F .text	00000014 _port_switch
00002000 g       *ABS*	00000000 __ram_size__
08000210 g     F .text	00000026 SVCallVector
080000f0  w    F .text	00000002 __late_init
20000908 g     O .bss	00000010 vtlist
080001e0  w    F .text	00000002 HardFaultVector
08000280 g     F .text	000000a0 _port_irq_epilogue
08001240 g     F .text	00000026 chCoreAlloc
20000a08 g     O .bss	00000030 SPID2
080013a0 g     F .text	00000008 pwmInit
080025e0 g     F .text	0000005c lcd3310WriteChar
080029b8 g       *ABS*	00000000 _textdata
080001e0  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
08002640 g     F .text	0000002a lcd3310WriteText
080001e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08002670 g     F .text	00000068 main
080017f0 g     F .text	0000003c Vector6C
20000918 g     O .bss	0000001c rlist
20000a50 g     O .bss	00000014 PWMD4
080001e0  w    F .text	00000002 VectorA0
08001610 g     F .text	00000008 spiInit
08001340 g     F .text	00000046 adcObjectInit
080000ec g       startup	00000000 __init_array_end
20000a3c g     O .bss	00000014 PWMD1
080001e0  w    F .text	00000002 VectorC4
08001920 g     F .text	00000044 Vector7C
08001e00 g     F .text	00000044 rtc_lld_set_prescaler
08000c30 g     F .text	00000020 chMtxInit
08000470 g     F .text	00000018 _idle_thread
08001150 g     F .text	000000be chOQWriteTimeout
080013b0 g     F .text	00000018 pwmObjectInit
080001e0  w    F .text	00000002 VectorB0
08002700 g     O .text	00000016 ch_debug
080001e0  w    F .text	00000002 Vector90
08000c90 g     F .text	00000058 chEvtSignalI
20000000 g       *ABS*	00000000 __ram_start__
08000350 g     F .text	00000012 _port_thread_start
080001e0  w    F .text	00000002 Vector60
080001e0  w    F .text	00000002 Vector1C
08001390 g     F .text	00000002 mmcInit
08000980 g     F .text	00000070 chSchDoRescheduleAhead
080001e0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08001830 g     F .text	00000044 Vector70
080001e0  w    F .text	00000002 VectorD4
08000410 g     F .text	0000005c nvicSetSystemHandlerPriority
08001f70 g     F .text	0000007c spi_lld_send
20000800 g     O .bss	000000c0 _idle_thread_wa
08000fe0 g     F .text	00000050 chOQInit
08000e90 g     F .text	0000008c chIQGetTimeout
20000800 g       .bss	00000000 _data
08001d70 g     F .text	00000090 Vector4C
08001970 g     F .text	00000044 Vector80
08000df0 g     F .text	00000094 chIQPutI
08000320 g     F .text	00000006 _port_switch_from_isr
08001770 g     F .text	00000034 tmInit
080001e0  w    F .text	00000002 Vector68
08001650 g     F .text	00000020 spiSelect
08001690 g     F .text	00000054 spiSend
20000400 g       .stacks	00000000 __main_stack_end__
080018d0 g     F .text	00000044 Vector78
20002000 g       *ABS*	00000000 __ram_end__
20000800 g       .bss	00000000 _edata
20000adc g       *ABS*	00000000 _end
08002520 g     F .text	00000054 lcd3310Clear
08000670 g     F .text	00000044 chVTResetI
080001e0 g     F .text	00000002 _unhandled_exception
08001550 g     F .text	00000068 sdObjectInit
080001e0  w    F .text	00000002 Vector88
08002420 g     F .text	000000a4 lcd3310Init
080017b0 g     F .text	00000034 tmObjectInit
20000400 g       .stacks	00000000 __main_thread_stack_base__
080000ec g       startup	00000000 __init_array_start
08000a30 g     F .text	0000009c _thread_init
080001e0  w    F .text	00000002 Vector50
08001e50 g     F .text	00000054 rtc_lld_init
08001030 g     F .text	00000090 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080001e0  w    F .text	00000002 Vector44
080001e0  w    F .text	00000002 Vector28
08002410 g     F .text	00000002 boardInit
08002170 g     F .text	00000014 VectorB8
00000400 g       *ABS*	00000000 __main_stack_size__
20000800 g       .stacks	00000000 __process_stack_end__
080001e0  w    F .text	00000002 Vector34
08002400 g     F .text	00000008 __early_init
080020a0 g     F .text	00000024 VectorA4
00000400 g       *ABS*	00000000 __process_stack_size__
080001e0  w    F .text	00000002 Vector20


