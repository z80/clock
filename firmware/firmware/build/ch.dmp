
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000111

Program Header:
    LOAD off    0x00008000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x0000436c memsz 0x00004370 flags rwx
    LOAD off    0x00010800 vaddr 0x20000800 paddr 0x08004370 align 2**15
         filesz 0x00000000 memsz 0x000004a4 flags rw-
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x20000000 align 2**15
         filesz 0x00000000 memsz 0x00000800 flags rw-
private flags = 5000002: [Version5 EABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000000ec  08000000  08000000  00008000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000427c  080000f0  080000f0  000080f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000004  0800436c  0800436c  0000c36c  2**0
                  ALLOC
  3 .stacks       00000800  20000000  20000000  00010000  2**0
                  ALLOC
  4 .bss          000004a4  20000800  08004370  00010800  2**3
                  ALLOC
  5 .debug_abbrev 00005865  00000000  00000000  0000c36c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0001ab7b  00000000  00000000  00011bd1  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000a7b7  00000000  00000000  0002c74c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000021f1  00000000  00000000  00036f03  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_pubtypes 000040b5  00000000  00000000  000390f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000014f0  00000000  00000000  0003d1a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00001190  00000000  00000000  0003e699  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00004af3  00000000  00000000  0003f829  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      0000002a  00000000  00000000  0004431c  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000031  00000000  00000000  00044346  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00003644  00000000  00000000  00044378  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    0000483e  00000000  00000000  000479bc  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080000f0 l    d  .text	00000000 .text
0800436c l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_pubnames	00000000 .debug_pubnames
00000000 l    d  .debug_pubtypes	00000000 .debug_pubtypes
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000334 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
200008c0 l     O .bss	00000048 mainthread.4642
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000740 l     F .text	00000022 fifo_remove
08000770 l     F .text	00000020 dequeue
08000870 l     F .text	0000008e wakeup
00000000 l    df *ABS*	00000000 chthreads.c
08000ab0 l     F .text	0000001a list_remove
00000000 l    df *ABS*	00000000 chsem.c
08000cd0 l     F .text	00000028 queue_insert
08000d00 l     F .text	00000022 fifo_remove
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chmboxes.c
00000000 l    df *ABS*	00000000 chqueues.c
08001010 l     F .text	00000028 queue_insert
08001040 l     F .text	00000022 fifo_remove
08001070 l     F .text	00000040 qwait
00000000 l    df *ABS*	00000000 chmemcore.c
20000934 l     O .bss	00000004 nextmem
20000938 l     O .bss	00000004 endmem
00000000 l    df *ABS*	00000000 chheap.c
20000940 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 adc.c
00000000 l    df *ABS*	00000000 mmc_spi.c
08003f50 l     O .text	00000020 mmc_vmt
080016b0 l     F .text	0000006c mmc_read
08001720 l     F .text	0000006c mmc_write
08003f70 l     O .text	00000100 crc7_lookup_table
08001790 l     F .text	00000054 crc7
080017f0 l     F .text	00000068 wait
08001860 l     F .text	0000008a send_hdr
080018f0 l     F .text	00000048 recvr1
08001940 l     F .text	00000030 recvr3
08001970 l     F .text	0000004a send_command_R1
080019c0 l     F .text	0000004e send_command_R3
08001a10 l     F .text	00000116 read_CxD
08001b30 l     F .text	00000048 sync
08004090 l     O .text	00000007 stopcmd.6848
08004080 l     O .text	00000002 start.6857
08004070 l     O .text	00000002 stop.6862
00000000 l    df *ABS*	00000000 mmcsd.c
080021f0 l     F .text	0000009e mmcsd_get_slice
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 serial.c
08002360 l     F .text	00000026 write
08002390 l     F .text	00000026 read
080023c0 l     F .text	0000002a put
080023f0 l     F .text	0000001e get
08002410 l     F .text	0000002a putt
08002440 l     F .text	0000001e gett
08002460 l     F .text	00000026 writet
08002490 l     F .text	00000026 readt
080040a0 l     O .text	00000020 vmt
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 tm.c
20000960 l     O .bss	00000004 measurement_offset
080027b0 l     F .text	00000014 tm_start
080027d0 l     F .text	00000054 tm_stop
00000000 l    df *ABS*	00000000 stm32_dma.c
20000964 l     O .bss	00000004 dma_streams_mask
20000968 l     O .bss	00000038 dma_isr_redir
00000000 l    df *ABS*	00000000 hal_lld.c
08002c70 l     F .text	00000060 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 adc_lld.c
00000000 l    df *ABS*	00000000 pal_lld.c
08004120 l     O .text	00000012 cfgtab.6366
00000000 l    df *ABS*	00000000 rtc_lld.c
00000000 l    df *ABS*	00000000 spi_lld.c
20000a38 l     O .bss	00000002 dummytx
20000a3a l     O .bss	00000002 dummyrx
08003180 l     F .text	000000d8 spi_lld_serve_rx_interrupt
08003260 l     F .text	0000001a spi_lld_serve_tx_interrupt
00000000 l    df *ABS*	00000000 pwm_lld.c
08003690 l     F .text	000000ac pwm_lld_serve_interrupt
00000000 l    df *ABS*	00000000 serial_lld.c
08003860 l     F .text	00000076 set_error
080038e0 l     F .text	00000150 serve_interrupt
08003a30 l     F .text	0000001c notify2
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 playback.c
20000b10 l     O .bss	00000028 mailbox
20000b38 l     O .bss	00000004 message
00000000 l    df *ABS*	00000000 lcd3310.c
00000000 l    df *ABS*	00000000 display.c
20000b3c l     O .bss	00000001 mode
20000b40 l     O .bss	00000028 mailbox
20000b68 l     O .bss	00000004 message
08004360 l     O .text	0000000c spicfg
20000b70 l     O .bss	00000130 displayWA
08003e90 l     F .text	0000005c display_thd
20000ca0 l     O .bss	00000004 msg.6431
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chlists.c
00000000 l    df *ABS*	00000000 chdynamic.c
00000000 l    df *ABS*	00000000 chcond.c
00000000 l    df *ABS*	00000000 chmsg.c
00000000 l    df *ABS*	00000000 chmempools.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 ext.c
00000000 l    df *ABS*	00000000 gpt.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 icu.c
00000000 l    df *ABS*	00000000 mac.c
00000000 l    df *ABS*	00000000 pal.c
00000000 l    df *ABS*	00000000 sdc.c
00000000 l    df *ABS*	00000000 serial_usb.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 usb.c
00000000 l    df *ABS*	00000000 ext_lld_isr.c
00000000 l    df *ABS*	00000000 can_lld.c
00000000 l    df *ABS*	00000000 ext_lld.c
00000000 l    df *ABS*	00000000 mac_lld.c
00000000 l    df *ABS*	00000000 sdc_lld.c
00000000 l    df *ABS*	00000000 i2c_lld.c
00000000 l    df *ABS*	00000000 gpt_lld.c
00000000 l    df *ABS*	00000000 icu_lld.c
00000000 l    df *ABS*	00000000 uart_lld.c
00000000 l    df *ABS*	00000000 usb_lld.c
00000000 l    df *ABS*	00000000 sd_spi_stm32.c
00000000 l    df *ABS*	00000000 ff.c
00000000 l    df *ABS*	00000000 evtimer.c
00000000 l    df *ABS*	00000000 syscalls.c
00000000 l    df *ABS*	00000000 shell.c
00000000 l    df *ABS*	00000000 chprintf.c
00000000 l    df *ABS*	00000000 chrtclib.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 misc.c
00000000 l    df *ABS*	00000000 stm32f10x_spi.c
00000000 l    df *ABS*	00000000 stm32f10x_gpio.c
00000000 l    df *ABS*	00000000 stm32f10x_rcc.c
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 lcltime_r.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mktime.c
00000000 l    df *ABS*	00000000 mktm_r.c
00000000 l    df *ABS*	00000000 strcasecmp.c
00000000 l    df *ABS*	00000000 strpbrk.c
00000000 l    df *ABS*	00000000 strspn.c
00000000 l    df *ABS*	00000000 tzlock.c
00000000 l    df *ABS*	00000000 div.c
00000000 l    df *ABS*	00000000 gettzinfo.c
00000000 l       *ABS*	00000000 shift
08004140 g     O .text	0000003c pal_default_config
080001e0  w    F .text	00000002 Vector58
080001e0  w    F .text	00000002 VectorE8
080001e0  w    F .text	00000002 Vector9C
08000380 g     F .text	00000094 nvicEnableVector
08003770 g     F .text	00000094 VectorAC
08000c40 g     F .text	00000018 chThdExit
08000590 g     F .text	000000a0 chSysTimerHandlerI
08000e70 g     F .text	0000003e chEvtBroadcastFlagsI
08000900 g     F .text	0000005c chSchGoSleepTimeoutS
080001e0  w    F .text	00000002 Vector5C
080034d0 g     F .text	0000001e spi_lld_select
080001e0  w    F .text	00000002 NMIVector
08002290 g     F .text	0000008c mmcsdGetCapacity
08002ad0 g     F .text	00000064 dmaInit
080001e0  w    F .text	00000002 Vector8C
080001e0  w    F .text	00000002 VectorDC
08000000 g     O startup	000000ec _vectors
08000820 g     F .text	0000004c chSchGoSleepS
08001dc0 g     F .text	0000007c mmcDisconnect
20000ca4 g       *ABS*	00000000 __heap_base__
08004370 g       *ABS*	00000000 _etext
08000b70 g     F .text	00000060 chThdCreateI
00000000         *UND*	00000000 msObjectInit
080001e0  w    F .text	00000002 VectorC8
080034f0 g     F .text	0000001e spi_lld_unselect
08003610 g     F .text	0000007c spi_lld_receive
08000960 g     F .text	00000050 chSchWakeupS
08002540 g     F .text	00000050 sdIncomingDataI
080013e0 g     F .text	0000008e chOQGetI
08003b70 g     F .text	0000000e mmc_lld_is_write_protected
08000790 g     F .text	0000002c _scheduler_init
080009b0 g     F .text	0000001c chSchRescheduleS
08000bd0 g     F .text	00000040 chThdCreateStatic
080001e0  w    F .text	00000002 Vector94
080001e0  w    F .text	00000002 VectorA8
080001e0  w    F .text	00000002 VectorB4
08002110 g     F .text	00000048 mmcStopSequentialWrite
08003b60 g     F .text	0000000e mmc_lld_is_card_inserted
200009d4 g     O .bss	00000004 RTCD1
20000a64 g     O .bss	00000078 SD2
080007c0 g     F .text	0000005c chSchReadyI
080000ec g       startup	00000000 __fini_array_end
080001f0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000630 g     F .text	00000024 _vt_init
08001590 g     F .text	0000004c chCoreAllocI
08002680 g     F .text	00000020 spiUnselect
080015e0 g     F .text	0000002c _heap_init
08002940 g     F .text	00000044 Vector74
08001610 g     F .text	00000034 halInit
20000800 g       .bss	00000000 _bss_start
080009d0 g     F .text	00000044 chSchDoRescheduleBehind
080001e0  w    F .text	00000002 UsageFaultVector
20002000 g       *ABS*	00000000 __heap_end__
080001e0  w    F .text	00000002 DebugMonitorVector
20000adc g     O .bss	00000034 MMCD1
08004180 g     O .text	000001d6 Fonts8x5
080001e0  w    F .text	00000002 Vector40
08000110 g     F .text	000000d0 ResetHandler
08001240 g     F .text	000000be chIQReadTimeout
080001e0  w    F .text	00000002 VectorBC
08003c30 g     F .text	00000050 lcd3310WriteByte
08000250 g     F .text	00000040 _port_init
08002cd0 g     F .text	0000008c hal_lld_init
08000f10 g     F .text	00000060 chMBInit
08003280 g     F .text	00000080 spi_lld_init
08000c60 g     F .text	00000068 chThdExitS
08002350 g     F .text	00000008 rtcInit
08001650 g     F .text	00000008 adcInit
080001e0  w    F .text	00000002 PendSVVector
08000660 g     F .text	0000008c chVTSetI
080001e0  w    F .text	00000002 Vector64
20000ca4 g       .bss	00000000 _bss_end
08000100  w    F .text	00000002 _default_exit
08002f60 g     F .text	000000e0 _pal_lld_setgroupmode
08002e20 g     F .text	0000008c adc_lld_init
080001e0  w    F .text	00000002 VectorCC
08003a70 g     F .text	00000024 sd_lld_init
08000d30 g     F .text	0000002a chSemInit
080001e0  w    F .text	00000002 Vector54
08003ce0 g     F .text	0000005a lcd3310SetPosXY
080001e0  w    F .text	00000002 Vector98
200009a0 g     O .bss	00000034 ADCD1
08003a50 g     F .text	00000014 VectorD8
080001e0  w    F .text	00000002 Vector24
08003300 g     F .text	00000158 spi_lld_start
08000a90 g     F .text	0000001c chSchDoReschedule
08000510 g     F .text	00000074 chSysInit
08000c10 g     F .text	00000024 chThdSleep
080010b0 g     F .text	00000052 chIQInit
080040c0 g     O .text	00000054 _stm32_dma_streams
08002a80 g     F .text	00000044 Vector84
00000000         *UND*	00000000 assert_param
08000200 g     F .text	0000001c SysTickVector
080025a0 g     F .text	0000002e spiObjectInit
200009d8 g     O .bss	00000030 SPID1
08002d60 g     F .text	000000b4 stm32_clock_init
08002eb0 g     F .text	000000a4 _pal_lld_init
080024c0 g     F .text	00000008 sdInit
080001e0  w    F .text	00000002 BusFaultVector
080001e0  w    F .text	00000002 VectorD0
080021b0 g     F .text	00000038 mmcGetInfo
08001530 g     F .text	00000030 _core_init
08003830 g     F .text	0000002c pwm_lld_init
080001e0  w    F .text	00000002 VectorE4
080001e0  w    F .text	00000002 VectorC0
08001f80 g     F .text	00000050 mmcStopSequentialRead
08000340 g     F .text	00000014 _port_switch
00002000 g       *ABS*	00000000 __ram_size__
08000fa0 g     F .text	00000068 chMBFetchS
08000220 g     F .text	00000026 SVCallVector
080000f0  w    F .text	00000002 __late_init
08001b90 g     F .text	0000002c mmcObjectInit
08003460 g     F .text	00000070 spi_lld_stop
20000908 g     O .bss	00000010 vtlist
080001e0  w    F .text	00000002 HardFaultVector
08000290 g     F .text	000000a0 _port_irq_epilogue
08001560 g     F .text	00000026 chCoreAlloc
20000a08 g     O .bss	00000030 SPID2
08002320 g     F .text	00000008 pwmInit
08003d40 g     F .text	0000005c lcd3310WriteChar
08004370 g       *ABS*	00000000 _textdata
080001e0  w    F .text	00000002 VectorE0
00000000 g       *ABS*	00000000 _text
08003da0 g     F .text	0000002a lcd3310WriteText
080001e0  w    F .text	00000002 MemManageVector
080000ec g       startup	00000000 __fini_array_start
08002160 g     F .text	00000048 mmcSync
08003ac0 g     F .text	00000094 playbackInit
08003ef0 g     F .text	0000001c main
080028b0 g     F .text	0000003c Vector6C
20000918 g     O .bss	0000001c rlist
20000a50 g     O .bss	00000014 PWMD4
080001e0  w    F .text	00000002 VectorA0
08002590 g     F .text	00000008 spiInit
08001660 g     F .text	00000046 adcObjectInit
08000f70 g     F .text	0000002e chMBFetch
08003dd0 g     F .text	000000b4 initDisplay
080000ec g       startup	00000000 __init_array_end
20000a3c g     O .bss	00000014 PWMD1
080001e0  w    F .text	00000002 VectorC4
080029e0 g     F .text	00000044 Vector7C
080030d0 g     F .text	00000044 rtc_lld_set_prescaler
08002c20 g     F .text	00000050 dmaStreamRelease
08000e50 g     F .text	00000020 chMtxInit
080004f0 g     F .text	00000018 _idle_thread
08001470 g     F .text	000000be chOQWriteTimeout
08002330 g     F .text	00000018 pwmObjectInit
080001e0  w    F .text	00000002 VectorB0
08003f30 g     O .text	00000016 ch_debug
080001e0  w    F .text	00000002 Vector90
08000eb0 g     F .text	00000058 chEvtSignalI
20000000 g       *ABS*	00000000 __ram_start__
08000360 g     F .text	00000012 _port_thread_start
080001e0  w    F .text	00000002 Vector60
080001e0  w    F .text	00000002 Vector1C
08001b80 g     F .text	00000002 mmcInit
08000a20 g     F .text	00000070 chSchDoRescheduleAhead
08001e40 g     F .text	0000008a mmcStartSequentialRead
08001fd0 g     F .text	0000008a mmcStartSequentialWrite
080001e0  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
080028f0 g     F .text	00000044 Vector70
080001e0  w    F .text	00000002 VectorD4
08000490 g     F .text	0000005c nvicSetSystemHandlerPriority
08002620 g     F .text	0000003e spiStop
08003590 g     F .text	0000007c spi_lld_send
080026a0 g     F .text	0000004c spiIgnore
20000800 g     O .bss	000000c0 _idle_thread_wa
08001300 g     F .text	00000050 chOQInit
080011b0 g     F .text	0000008c chIQGetTimeout
20000800 g       .bss	00000000 _data
08003040 g     F .text	00000090 Vector4C
08002a30 g     F .text	00000044 Vector80
08001110 g     F .text	00000094 chIQPutI
08000330 g     F .text	00000006 _port_switch_from_isr
08002830 g     F .text	00000034 tmInit
080001e0  w    F .text	00000002 Vector68
08002660 g     F .text	00000020 spiSelect
080026f0 g     F .text	00000054 spiSend
20000400 g       .stacks	00000000 __main_stack_end__
08002990 g     F .text	00000044 Vector78
08003510 g     F .text	0000007c spi_lld_ignore
08001bc0 g     F .text	00000200 mmcConnect
20002000 g       *ABS*	00000000 __ram_end__
20000800 g       .bss	00000000 _edata
20000ca4 g       *ABS*	00000000 _end
08003c80 g     F .text	00000054 lcd3310Clear
080006f0 g     F .text	00000044 chVTResetI
080001e0 g     F .text	00000002 _unhandled_exception
080024d0 g     F .text	00000068 sdObjectInit
080001e0  w    F .text	00000002 Vector88
08003b80 g     F .text	000000a4 lcd3310Init
08002870 g     F .text	00000034 tmObjectInit
20000400 g       .stacks	00000000 __main_thread_stack_base__
080000ec g       startup	00000000 __init_array_start
080025d0 g     F .text	0000004a spiStart
08000ad0 g     F .text	0000009c _thread_init
080001e0  w    F .text	00000002 Vector50
08002b40 g     F .text	000000d8 dmaStreamAllocate
08003120 g     F .text	00000054 rtc_lld_init
08000420 g     F .text	0000006c nvicDisableVector
08001350 g     F .text	00000090 chOQPutTimeout
20000000 g       .stacks	00000000 __main_stack_base__
080001e0  w    F .text	00000002 Vector44
080001e0  w    F .text	00000002 Vector28
08003ab0 g     F .text	00000002 boardInit
08002060 g     F .text	000000b0 mmcSequentialWrite
08003810 g     F .text	00000014 VectorB8
00000400 g       *ABS*	00000000 __main_stack_size__
20000800 g       .stacks	00000000 __process_stack_end__
080001e0  w    F .text	00000002 Vector34
08002750 g     F .text	00000054 spiReceive
08003aa0 g     F .text	00000008 __early_init
08000df0 g     F .text	0000005c chSemSignalI
08003740 g     F .text	00000024 VectorA4
08001ed0 g     F .text	000000a6 mmcSequentialRead
00000400 g       *ABS*	00000000 __process_stack_size__
080001e0  w    F .text	00000002 Vector20
08000d60 g     F .text	0000008c chSemWaitTimeoutS


